{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davib\\\\Desktop\\\\FULL-MERN-STACK-CODEDAMN\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useHistory","Dashboard","history","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","updateQuote","event","preventDefault","method","body","JSON","stringify","e","target","value"],"sources":["C:/Users/davib/Desktop/FULL-MERN-STACK-CODEDAMN/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory()\r\n\tconst [quote, setQuote] = useState('')\r\n\tconst [tempQuote, setTempQuote] = useState('')\r\n\r\n\tasync function populateQuote() {\r\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\r\n\t\t\theaders: {\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(data.quote)\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\t\tif (token) {\r\n\t\t\tconst user = jwt.decode(token)\r\n\t\t\tif (!user) {\r\n\t\t\t\tlocalStorage.removeItem('token')\r\n\t\t\t\thistory.replace('/login')\r\n\t\t\t} else {\r\n\t\t\t\tpopulateQuote()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tasync function updateQuote(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tquote: tempQuote,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(tempQuote)\r\n\t\t\tsetTempQuote('')\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Your quote: {quote || 'No quote found'}</h1>\r\n\t\t\t<form onSubmit={updateQuote}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Quote\"\r\n\t\t\t\t\tvalue={tempQuote}\r\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value=\"Update quote\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACvB,MAAMC,OAAO,GAAGF,UAAU,EAA1B;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;EAEA,eAAeS,aAAf,GAA+B;IAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;MAC1DC,OAAO,EAAE;QACR,kBAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;MADV;IADiD,CAApC,CAAvB;IAMA,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;IACA,IAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;MACzBX,QAAQ,CAACS,IAAI,CAACV,KAAN,CAAR;IACA,CAFD,MAEO;MACNa,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;IACA;EACD;;EAEDpB,SAAS,CAAC,MAAM;IACf,MAAMqB,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;IACA,IAAIM,KAAJ,EAAW;MACV,MAAMC,IAAI,GAAGpB,GAAG,CAACqB,MAAJ,CAAWF,KAAX,CAAb;;MACA,IAAI,CAACC,IAAL,EAAW;QACVR,YAAY,CAACU,UAAb,CAAwB,OAAxB;QACAnB,OAAO,CAACoB,OAAR,CAAgB,QAAhB;MACA,CAHD,MAGO;QACNf,aAAa;MACb;IACD;EACD,CAXQ,EAWN,EAXM,CAAT;;EAaA,eAAegB,WAAf,CAA2BC,KAA3B,EAAkC;IACjCA,KAAK,CAACC,cAAN;IAEA,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;MAC1DiB,MAAM,EAAE,MADkD;MAE1DhB,OAAO,EAAE;QACR,gBAAgB,kBADR;QAER,kBAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFV,CAFiD;MAM1De,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACpB1B,KAAK,EAAEE;MADa,CAAf;IANoD,CAApC,CAAvB;IAWA,MAAMQ,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;IACA,IAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;MACzBX,QAAQ,CAACC,SAAD,CAAR;MACAC,YAAY,CAAC,EAAD,CAAZ;IACA,CAHD,MAGO;MACNU,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;IACA;EACD;;EAED,oBACC;IAAA,wBACC;MAAA,2BAAiBd,KAAK,IAAI,gBAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAM,QAAQ,EAAEoB,WAAhB;MAAA,wBACC;QACC,IAAI,EAAC,MADN;QAEC,WAAW,EAAC,OAFb;QAGC,KAAK,EAAElB,SAHR;QAIC,QAAQ,EAAGyB,CAAD,IAAOxB,YAAY,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;MAJ9B;QAAA;QAAA;QAAA;MAAA,QADD,eAOC;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAPD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAcA,CAtED;;GAAM/B,S;UACWD,U;;;KADXC,S;AAwEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}