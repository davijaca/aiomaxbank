{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useNavigate();\n  const [balance, displayBalance] = useState('');\n  const [newDeposit, setNewDeposit] = useState('');\n  const [newWithdraw, setNewWithdraw] = useState('');\n\n  async function populateBalance() {\n    const req = await fetch('http://localhost:1337/api/balance', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      displayBalance(data.balance);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateBalance();\n      }\n    }\n  });\n\n  async function Deposit() {\n    const req = await fetch('http://localhost:1337/api/balance', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        balance: +balance + +newDeposit\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setNewDeposit('');\n      displayBalance(newDeposit);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  async function Withdraw() {\n    const req = await fetch('http://localhost:1337/api/balance', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        balance: +balance - +newWithdraw\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setNewWithdraw('');\n      displayBalance(newWithdraw);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return;\n};\n\n_s(Dashboard, \"WA5tjlOoLn6O13j0+wwt2WPKlUQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useNavigate","Dashboard","history","balance","displayBalance","newDeposit","setNewDeposit","newWithdraw","setNewWithdraw","populateBalance","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","Deposit","method","body","JSON","stringify","Withdraw"],"sources":["C:/Users/davib/Desktop/FULL-MERN-STACK-CODEDAMN - Copy/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n    const history = useNavigate()\r\n    const [balance, displayBalance] = useState('')\r\n    const [newDeposit, setNewDeposit] = useState('')\r\n    const [newWithdraw, setNewWithdraw] = useState('')\r\n    async function populateBalance() {\r\n        const req = await fetch('http://localhost:1337/api/balance', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n            },\r\n        })\r\n\r\n        const data = await req.json()\r\n        if(data.status === 'ok') {\r\n            displayBalance(data.balance)\r\n        } else {\r\n            alert(data.error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if(!user) {\r\n                localStorage.removeItem('token')\r\n                history.replace('/login')\r\n            } else {\r\n                populateBalance()\r\n            }\r\n        }\r\n    })\r\n\r\n    async function Deposit() {\r\n\r\n        const req = await fetch('http://localhost:1337/api/balance', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify({\r\n                balance: +balance + +newDeposit,\r\n            }),\r\n        })\r\n\r\n        const data = await req.json()\r\n        if(data.status === 'ok') {\r\n            setNewDeposit('')\r\n            displayBalance(newDeposit)\r\n        } else {\r\n            alert(data.error)\r\n        }\r\n\r\n    }\r\n\r\n    async function Withdraw() {\r\n\r\n        const req = await fetch('http://localhost:1337/api/balance', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify({\r\n                balance: +balance - +newWithdraw,\r\n            }),\r\n        })\r\n\r\n        const data = await req.json()\r\n        if(data.status === 'ok') {\r\n            setNewWithdraw('')\r\n            displayBalance(newWithdraw)\r\n        } else {\r\n            alert(data.error)\r\n        }\r\n\r\n    }\r\n    \r\n    return \r\n        \r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}